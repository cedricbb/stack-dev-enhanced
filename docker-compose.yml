version: "3.3"

services:
  mariadb:
    container_name: mariadb
    restart: always
    image: mariadb:10.11
    security_opt:
      - no-new-privileges:true
    environment:
      - MARIADB_ROOT_USER=${DATABASE_ROOT_USER}
      - MARIADB_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
      - MARIADB_ROOT_HOST=%
    volumes:
      - mariadb:/var/lib/mysql
      - ./dumps:/dumps
      - ./configs/mariadb:/etc/prometheus/mariadb:ro
      - ./scripts:/scripts:ro
    ports:
      - 3306:3306
    labels:
      - traefik.enable=false
    networks:
      - db

  traefik:
    container_name: traefik
    image: traefik:v2.10
    command:
      - --api.insecure=false
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=postmaster@localhost
      - --certificatesresolvers.myresolver.acme.storage=/certs/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs/traefik:/etc/traefik:ro
      - ./certs:/certs:ro
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.routers.dashboard.middlewares=secure-headers@file
    restart: unless-stopped

  postgres:
    container_name: postgres
    restart: always
    image: postgres:15-alpine
    security_opt:
      - no-new-privileges:true
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_USER=${POSTGRES_DATABASE_USER}
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./dumps:/dumps
    ports:
      - 5432:5432
    labels:
      - traefik.enable=false
    networks:
      - db

  redis:
    image: redis:7-alpine
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    security_opt:
      - no-new-privileges:true
    labels:
      - traefik.enable=false
    restart: always
    ports:
      - 6379:6379
    networks:
      - db

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_LISTEN_PORT=5050
      - PGADMIN_CONFIG_SERVER_MODE=True
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=True
      - PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=True
      - PGADMIN_CONFIG_LOGIN_BANNER="Secure access via Traefik - Unauthorized access is prohibited"
      - PGADMIN_CONFIG_CONSOLE_LOG_LEVEL=10
      - PGADMIN_CONFIG_PROXY_X_FOR_COUNT=1
      - PGADMIN_CONFIG_PROXY_X_PROTO_COUNT=1
      - PGADMIN_CONFIG_MAX_LOGIN_ATTEMPTS=3
      - PGADMIN_CONFIG_PASSWORD_LENGTH_MIN=8
      - PGADMIN_CONFIG_CHECK_PASSWORD_STRENGTH=True
    networks:
      - db
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.localhost`)
      - traefik.http.routers.pgadmin.entrypoints=websecure
      - traefik.http.routers.pgadmin.tls=true
      - traefik.http.services.pgadmin.loadbalancer.server.port=5050
      - traefik.http.routers.pgadmin.middlewares=pgadmin-headers@file,pgadmin-rate@file
    depends_on:
      - postgres
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      - PMA_HOST=mariadb
      - PMA_PORT=3306
      - PMA_ABSOLUTE_URI=https://phpmyadmin.localhost/
      - APACHE_SERVER_NAME=phpmyadmin.localhost
      - UPLOAD_LIMIT=300M
      - PMA_ARBITRARY=1
    volumes:
      - ./configs/phpmyadmin/apache.conf:/etc/apache2/sites-available/000-default.conf:ro
      - ./configs/phpmyadmin/apache.conf:/etc/apache2/sites-enabled/000-default.conf:ro
    networks:
      - db
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)
      - traefik.http.routers.phpmyadmin.entrypoints=websecure
      - traefik.http.routers.phpmyadmin.tls=true
      - traefik.http.services.phpmyadmin.loadbalancer.server.port=80
    depends_on:
      - mariadb
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)
      - traefik.http.routers.prometheus.entrypoints=websecure
      - traefik.http.routers.prometheus.tls=true
      - traefik.http.services.prometheus.loadbalancer.server.port=9090

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SERVER_ROOT_URL=https://grafana.localhost
      - GF_SERVER_DOMAIN=grafana.localhost
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.localhost`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls=true
      - traefik.http.services.grafana.loadbalancer.server.port=3000

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.cadvisor.rule=Host(`cadvisor.localhost`)
      - traefik.http.routers.cadvisor.entrypoints=websecure
      - traefik.http.routers.cadvisor.tls=true
      - traefik.http.services.cadvisor.loadbalancer.server.port=8080

  redis-exporter:
    container_name: redis-exporter
    image: oliver006/redis_exporter:latest
    depends_on:
      - redis
    environment:
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.redis-exporter.rule=Host(`redis-exporter.localhost`)
      - traefik.http.routers.redis-exporter.entrypoints=websecure
      - traefik.http.routers.redis-exporter.tls=true
      - traefik.http.services.redis-exporter.loadbalancer.server.port=9121

  postgres-exporter:
    container_name: postgres-exporter
    image: prometheuscommunity/postgres-exporter:latest
    depends_on:
      - postgres
    environment:
      - DATA_SOURCE_NAME=host=postgres user=${POSTGRES_DATABASE_USER} password=${POSTGRES_DATABASE_PASSWORD} dbname=${POSTGRES_DATABASE_NAME} sslmode=disable
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.postgres-exporter.rule=Host(`postgres-exporter.localhost`)
      - traefik.http.routers.postgres-exporter.entrypoints=websecure
      - traefik.http.routers.postgres-exporter.tls=true
      - traefik.http.services.postgres-exporter.loadbalancer.server.port=9187

  mariadb-metrics:
    image: bitnami/mysqld-exporter:latest
    container_name: mariadb-metrics
    command:
     - "--mysqld.username=root:secure_password"
     - "--mysqld.address=127.0.0.1:3306"
    ports:
      - "9104:9104"
    networks:
      - frontend
      - db
    depends_on:
      - mariadb
    labels:
      - traefik.enable=true
      - traefik.http.routers.mariadb-metrics.rule=Host(`mariadb-metrics.localhost`)
      - traefik.http.routers.mariadb-metrics.entrypoints=websecure
      - traefik.http.routers.mariadb-metrics.tls=true
      - traefik.http.services.mariadb-metrics.loadbalancer.server.port=9104

  docs:
    container_name: docs
    build:
      context: ./docs
      dockerfile: Dockerfile
    volumes:
      - ./docs:/docs
    security_opt:
      - no-new-privileges:true
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.docs.rule=Host(`docs.localhost`)
      - traefik.http.routers.docs.entrypoints=websecure
      - traefik.http.routers.docs.tls=true
      - traefik.http.services.docs.loadbalancer.server.port=8000
      - traefik.http.routers.docs.service=docs
      - traefik.http.services.docs-service.loadbalancer.server.scheme=http
      - traefik.http.middlewares.docs-redirect.redirectscheme.scheme=https
      - traefik.http.routers.docs.middlewares=secure-headers@file
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped

volumes:
  mariadb:
    driver: local
  postgres:
    driver: local
  pgadmin:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  frontend:
    name: frontend
    external: false
  backend:
    name: backend
    external: false
  db:
    name: db
    external: false