version: "3.3"

services:
  mariadb:
    container_name: mariadb
    restart: always
    image: mariadb:10.11
    security_opt:
      - no-new-privileges:true
    environment:
      - MARIADB_ROOT_USER=${DATABASE_USER}
      - MARIADB_ROOT_PASSWORD=${DATABASE_PASSWORD}
      - MARIADB_USER=${DATABASE_USER}
      - MARIADB_PASSWORD=${DATABASE_USER_PASSWORD}
      - MARIADB_ROOT_HOST=%
    volumes:
      - mariadb:/var/lib/mysql
      - ./dumps:/dumps
    ports:
      - 3306:3306
    labels:
      - traefik.enable=false
    networks:
      - db

  traefik:
    container_name: traefik
    image: traefik:v2.10
    restart: always
    command:
      - --api.dashboard=true
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.domains[0].main=localhost
      - --entrypoints.websecure.http.tls.domains[0].sans=*.localhost
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/certificates:/etc/traefik/certificates:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.localhost`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls=true
    networks:
      - frontend
      - backend

  postgres:
    container_name: postgres
    restart: always
    image: postgres:15-alpine
    security_opt:
      - no-new-privileges:true
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE_NAME}
      - POSTGRES_USER=${POSTGRES_DATABASE_USER}
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./dumps:/dumps
    ports:
      - 5432:5432
    labels:
      - traefik.enable=false
    networks:
      - db

  redis:
    image: redis:7-alpine
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    security_opt:
      - no-new-privileges:true
    labels:
      - traefik.enable=false
    restart: always
    ports:
      - 6379:6379
    networks:
      - db

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/var/lib/pgadmin
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.localhost`)
      - traefik.http.routers.pgadmin.entrypoints=websecure
      - traefik.http.routers.pgadmin.tls=true
    networks:
      - backend

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.localhost`)

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - backend

volumes:
  mariadb:
    driver: local
  postgres:
    driver: local
  pgadmin:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  frontend:
    name: frontend
    external: false
  backend:
    name: backend
    external: false
  db:
    name: db
    external: false