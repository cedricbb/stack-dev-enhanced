version: "3.3"

services:
  traefik:
    container_name: traefik
    image: traefik:v2.10
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      # Optimisations m√©moire
      - --accesslog.bufferingsize=100
      - --pilot.dashboard=false
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik:/etc/traefik:ro
      - ./letsencrypt:/letsencrypt
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          memory: 128M
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.cedricbillard-dev.fr`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
    restart: unless-stopped

  mariadb:
    container_name: mariadb
    image: mariadb:10.11
    command: --performance_schema=OFF --table_definition_cache=400
    secrets:
      - db_root_password
    environment:
      - MARIADB_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
    volumes:
      - mariadb_data:/var/lib/mysql
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  node-dev:
    build:
      context: ./docker/dev/node
      dockerfile: Dockerfile
    volumes:
      - ./projects:/projects
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - frontend
      - backend

  php-dev:
    build:
      context: ./docker/dev/php
      dockerfile: Dockerfile
    volumes:
      - ./projects:/projects
    environment:
      - APP_ENV=dev
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - frontend
      - backend

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock --admin-password-file /run/secrets/portainer_password
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    secrets:
      - portainer_password
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          memory: 128M
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=Host(`portainer.cedricbillard-dev.fr`)
      - traefik.http.routers.portainer.entrypoints=websecure
      - traefik.http.routers.portainer.tls.certresolver=letsencrypt
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    restart: unless-stopped

  netdata:
    container_name: netdata
    image: netdata/netdata:latest
    pid: host
    network_mode: host
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          memory: 256M
    environment:
      - NETDATA_CLAIM_URL=https://app.netdata.cloud
    labels:
      - traefik.enable=true
      - traefik.http.routers.netdata.rule=Host(`netdata.cedricbillard-dev.fr`)
      - traefik.http.routers.netdata.entrypoints=websecure
      - traefik.http.routers.netdata.tls.certresolver=letsencrypt
      - traefik.http.services.netdata.loadbalancer.server.port=19999

  adminer:
    container_name: adminer
    image: adminer:latest
    environment:
      - ADMINER_DEFAULT_SERVER=mariadb
      - ADMINER_DESIGN=dracula
    networks:
      - frontend
      - db
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          memory: 64M
    labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.rule=Host(`adminer.cedricbillard-dev.fr`)
      - traefik.http.routers.adminer.entrypoints=websecure
      - traefik.http.routers.adminer.tls.certresolver=letsencrypt
      - traefik.http.services.adminer.loadbalancer.server.port=8080
    restart: unless-stopped

  docs:
    container_name: docs
    build:
      context: ./docs
      dockerfile: Dockerfile
    volumes:
      - ./docs:/docs
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.docs.rule=Host(`docs.cedricbillard-dev.fr`)
      - traefik.http.routers.docs.entrypoints=websecure
      - traefik.http.routers.docs.tls.certresolver=letsencrypt
      - traefik.http.services.docs.loadbalancer.server.port=8000
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped

secrets:
  db_root_password:
    file: ./secrets/db_root_password.txt
  redis_password:
    file: ./secrets/redis_password.txt
  portainer_password:
    file: ./secrets/portainer_password.txt

volumes:
  mariadb_data:
  redis_data:
  portainer_data:
  netdataconfig:
  netdatalib:
  netdatacache:

networks:
  frontend:
    name: frontend
  backend:
    name: backend
  db:
    name: db
